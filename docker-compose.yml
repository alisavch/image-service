version: '3.8'

services:
  image-service:
    build: ./
    container_name: image-service
    command: ./main
    env_file: .env
    environment:
      RABBITMQ_SERVER: rabbitmq
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - rabbitmq
    networks:
      - fullstack

  postgresql:
    image: postgres:latest
    restart: always
    container_name: postgresql
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "8001:5432"
    volumes:
      - ~/.docker-conf/postgresql:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - fullstack
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5432" ]
      interval: 5s
      timeout: 15s
      retries: 1

  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: rabbitmq
    env_file: .env
    environment:
      - RABBITMQ_DEFAULT_PASS=test
      - RABBITMQ_DEFAULT_USER=test
    ports:
      - "8002:5672"
      - "8004:15672"
    volumes:
      - ~/.docker-conf/rabbitmq:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq:/var/log/rabbitmq/
      - ~/.docker-conf/rabbitmq:/etc/rabbitmq/
    networks:
      - fullstack
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "15672" ]
      interval: 5s
      timeout: 15s
      retries: 1

volumes:
  api:
  database_postgres:
networks:
  fullstack:
    driver: bridge