// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	amqp "github.com/streadway/amqp"

	mock "github.com/stretchr/testify/mock"
)

// AMQP is an autogenerated mock type for the AMQP type
type AMQP struct {
	mock.Mock
}

// DeclareQueue provides a mock function with given fields: name
func (_m *AMQP) DeclareQueue(name string) (amqp.Queue, error) {
	ret := _m.Called(name)

	var r0 amqp.Queue
	if rf, ok := ret.Get(0).(func(string) amqp.Queue); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(amqp.Queue)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Publish provides a mock function with given fields: exchange, key, body
func (_m *AMQP) Publish(exchange string, key string, body string) error {
	ret := _m.Called(exchange, key, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(exchange, key, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// QosQueue provides a mock function with given fields:
func (_m *AMQP) QosQueue() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
