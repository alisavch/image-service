-- SCHEMA
CREATE SCHEMA IF NOT EXISTS image_service;

-- TYPE
CREATE TYPE enum_service AS ENUM('conversion', 'compression');
ALTER TYPE enum_service SET SCHEMA image_service;

CREATE TYPE enum_status AS ENUM ('queued', 'processing', 'done');
ALTER TYPE enum_status SET SCHEMA image_service;

-- TABLE
CREATE TABLE IF NOT EXISTS image_service.user_account (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    username character varying(50) NOT NULL,
    password character varying(60) NOT NULL,
    CONSTRAINT user_account_id PRIMARY KEY (id),
    CONSTRAINT user_account_username UNIQUE (username)
    );

CREATE TABLE IF NOT EXISTS image_service.uploaded_image(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    uploaded_name character varying(100) NOT NULL,
    uploaded_location character varying(100) NOT NULL,
    CONSTRAINT uploaded_image_id PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS image_service.resulted_image(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resulted_name character varying(100) NOT NULL,
    resulted_location character varying(100) NOT NULL,
    service image_service.enum_service,
    CONSTRAINT resulted_image_id PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS image_service.user_image(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_account_id bigint NOT NULL,
    uploaded_image_id bigint NOT NULL,
    resulting_image_id bigint NOT NULL,
    status image_service.enum_status,
    CONSTRAINT fk_user_image_user_account_id FOREIGN KEY (user_account_id) REFERENCES image_service.user_account(id),
    CONSTRAINT fk_user_image_uploaded_image_id FOREIGN KEY (uploaded_image_id) REFERENCES image_service.uploaded_image(id),
    CONSTRAINT fk_user_image_resulting_image_id FOREIGN KEY (resulting_image_id) REFERENCES image_service.resulted_image(id),
    CONSTRAINT user_image_id PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS image_service.request (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_image_id bigint NOT NULL,
    time_start date NOT NULL,
    end_of_time date NOT NULL,
    CONSTRAINT fk_request_user_image_id FOREIGN KEY (user_image_id) REFERENCES image_service.user_image(id),
    CONSTRAINT request_id PRIMARY KEY (id)
    );
